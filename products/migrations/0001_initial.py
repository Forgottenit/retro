# Generated by Django 4.2.2 on 2023-06-22 22:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("release_date", models.DateField(blank=True, null=True)),
                ("total_tracks", models.IntegerField(blank=True, null=True)),
                ("popularity", models.IntegerField(blank=True, null=True)),
                (
                    "album_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("album_type", models.CharField(blank=True, max_length=100, null=True)),
                ("label", models.CharField(blank=True, max_length=100, null=True)),
                ("copyright", models.CharField(blank=True, max_length=100, null=True)),
                ("explicit", models.BooleanField(blank=True, null=True)),
                ("spotify_url", models.URLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="album_images"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("track_number", models.IntegerField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("duration", models.CharField(blank=True, max_length=10, null=True)),
                ("explicit", models.BooleanField(blank=True, null=True)),
                ("spotify_url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TShirt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="product_images"
                    ),
                ),
                (
                    "sleeve_length",
                    models.CharField(
                        choices=[("short", "Short"), ("long", "Long")],
                        default="short",
                        max_length=5,
                    ),
                ),
                ("colour", models.CharField(blank=True, max_length=100, null=True)),
                ("on_sale", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="products.album"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TShirtSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Vinyl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="product_images"
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("on_sale", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="products.album"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TShirtVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.tshirtsize",
                    ),
                ),
                (
                    "tshirt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.tshirt",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CD",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="product_images"
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("on_sale", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="products.album"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "artist_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("spotify_url", models.URLField(blank=True, null=True)),
                ("genres", models.ManyToManyField(to="products.genre")),
            ],
        ),
        migrations.AddField(
            model_name="album",
            name="artists",
            field=models.ManyToManyField(related_name="albums", to="products.artist"),
        ),
        migrations.AddField(
            model_name="album",
            name="genres",
            field=models.ManyToManyField(related_name="albums", to="products.genre"),
        ),
        migrations.AddField(
            model_name="album",
            name="tracks",
            field=models.ManyToManyField(related_name="albums", to="products.track"),
        ),
    ]
